# -------------------------------------------------------------------------------------------------------------------------------------------------- #

[versions]

awaitility = '4.3.0'
aws-sdk = '2.25.45'
aws-crt = '0.29.18'
janino = '3.1.11'
jul-to-slf4j = '2.0.11'
kotest = '5.9.1'
kotest-extensions-mockserver = '1.3.0'
kotest-extensions-testcontainers = '2.0.2'
kotlin = '2.2.0'
kotlin-coroutines = '1.10.2'
kotlin-serialization = '1.8.0'
kotlinter = '5.1.1'
ksp = '2.2.0-2.0.2'
ksuid = '1.1.3'
logback = '1.5.18'
logstash-logback-encoder = '8.1'
micronaut-library-plugin = '4.5.3'
micronaut-platform = '4.9.1'
mockk = '1.14.4'
nexus-publish-plugin = '2.0.0'
testcontainers = '1.20.6'
testcontainers-keycloak = '3.6.0'
rest-assured = '5.5.1'

# -------------------------------------------------------------------------------------------------------------------------------------------------- #

[plugins]

kotlin-jvm = { id = 'org.jetbrains.kotlin.jvm', version.ref = 'kotlin' }
kotlin-serialization = { id = 'org.jetbrains.kotlin.plugin.serialization', version.ref = 'kotlin' }
kotlinter = { id = 'org.jmailen.kotlinter', version.ref = 'kotlinter' }
nexus-publish = { id = 'io.github.gradle-nexus.publish-plugin', version.ref = 'nexus-publish-plugin' }
ksp = { id = 'com.google.devtools.ksp', version.ref = 'ksp' }
micronaut-library = { id = 'io.micronaut.library', version.ref = 'micronaut-library-plugin' }

# -------------------------------------------------------------------------------------------------------------------------------------------------- #

[libraries]

ksuid = { group = 'com.github.ksuid', name = 'ksuid', version.ref = 'ksuid' }

# AWS
aws-bom = { group = 'software.amazon.awssdk', name = 'bom', version.ref = 'aws-sdk' }
aws-s3 = { group = 'software.amazon.awssdk', name = 's3' }
aws-s3-transfer = { group = 'software.amazon.awssdk', name = 's3-transfer-manager' }
aws-crt = { group = 'software.amazon.awssdk.crt', name = 'aws-crt', version.ref = 'aws-crt' }

# Kotlin
kotlin-stdlib = { group = 'org.jetbrains.kotlin', name = 'kotlin-stdlib', version.ref = 'kotlin' }
kotlin-reflect = { group = 'org.jetbrains.kotlin', name = 'kotlin-reflect', version.ref = 'kotlin' }
kotlin-coroutines-core = { group = 'org.jetbrains.kotlinx', name = 'kotlinx-coroutines-core', version.ref = 'kotlin-coroutines' }
kotlin-coroutines-slf4j = { group = 'org.jetbrains.kotlinx', name = 'kotlinx-coroutines-slf4j', version.ref = 'kotlin-coroutines' }
kotlin-serialization-json = { group = 'org.jetbrains.kotlinx', name = 'kotlinx-serialization-json', version.ref = 'kotlin-serialization' }

# Logging
logback-classic = { group = 'ch.qos.logback', name = 'logback-classic', version.ref = 'logback' }
janino = { group = 'org.codehaus.janino', name = 'janino', version.ref = 'janino' }
slf4j-extension-jul = { group = 'org.slf4j', name = 'jul-to-slf4j', version.ref = 'jul-to-slf4j' }
logstash-logback-encoder = { group = 'net.logstash.logback', name = 'logstash-logback-encoder', version.ref = 'logstash-logback-encoder' }

# Micronaut
micronaut-platform = { group = 'io.micronaut.platform', name = 'micronaut-platform', version.ref = 'micronaut-platform' }
micronaut-inject = { group = 'io.micronaut', name = 'micronaut-inject' }

# Rest Assured
restassured-extension-kotlin = { group = 'io.rest-assured', name = 'kotlin-extensions', version.ref = 'rest-assured' }

# Testcontainers
testcontainers-bom = { group = 'org.testcontainers', name = 'testcontainers-bom', version.ref = 'testcontainers' }
testcontainers = { group = 'org.testcontainers', name = 'testcontainers', version.ref = 'testcontainers' }
testcontainers-keycloak = { group = 'com.github.dasniko', name = 'testcontainers-keycloak', version.ref = 'testcontainers-keycloak' }
testcontainers-localstack = { group = 'org.testcontainers', name = 'localstack' }
testcontainers-postgresql = { group = 'org.testcontainers', name = 'postgresql' }
testcontainers-rabbitmq = { group = 'org.testcontainers', name = 'rabbitmq' }

# Testing
kotest-runner-junit5 = { group = 'io.kotest', name = 'kotest-runner-junit5', version.ref = 'kotest' }
kotest-assertions-core = { group = 'io.kotest', name = 'kotest-assertions-core', version.ref = 'kotest' }
kotest-property = { group = 'io.kotest', name = 'kotest-property', version.ref = 'kotest' }
kotest-extensions-mockserver = { group = 'io.kotest.extensions', name = 'kotest-extensions-mockserver', version.ref = 'kotest-extensions-mockserver' }
kotest-extensions-testcontainers = { group = 'io.kotest.extensions', name = 'kotest-extensions-testcontainers', version.ref = 'kotest-extensions-testcontainers' }
mockk = { group = 'io.mockk', name = 'mockk', version.ref = 'mockk' }
awaitility = { group = 'org.awaitility', name = 'awaitility', version.ref = 'awaitility' }

# -------------------------------------------------------------------------------------------------------------------------------------------------- #

[bundles]

kotest = [
    'kotest-assertions-core',
    'kotest-property',
    'kotest-runner-junit5',
]
testing = [
    'kotest-assertions-core',
    'kotest-property',
    'kotest-runner-junit5',
    'mockk',
    'awaitility',
]

# -------------------------------------------------------------------------------------------------------------------------------------------------- #
